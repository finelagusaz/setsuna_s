//******************************************************************************
// YAYA　ゴーストテンプレート
// 種々のイベント辞書
//******************************************************************************

//******************************************************************************
//シェル切り替え
//******************************************************************************

//------------------------------------------------------------------------------
//シェルチェンジ開始
//------------------------------------------------------------------------------

OnShellChanging
{
	if reference[0] == "mode online"
	{
		// mode onlineシェル初切り替え時
		if mode_online != 1
		{
			"\0\s[0]わかったわ。\w9\n/
			準備するから、\w4向こうで待っていてね。\w9\w9\e"
		}
		else
		{
			if shellname == "mode online"
			{
				"\0\s[0]再ログインしてくるわ。\w9\n/
				\s[5]少し、\w4待ってて。\w9\w9\e"
			}
			else {
				"\0\s[5]向こうで会いましょう。\w9\w9\e"
			}
		}
	}
	elseif reference[0] == "tenebres"
	{
		"\0\s[0]うん。\w9\n/
		今日は終わりね。\w9\w9\e"
	}
	else
	{
		"\0\s[6]ちょっと、\w4着替えてくるわ。\e"
	}
}

//------------------------------------------------------------------------------
//シェルチェンジ完了
//------------------------------------------------------------------------------
OnShellChanged
{
	shellname = reference[0]
	--
	if reference[0] == "mode online"
	{
		//modeonline切り替え。
		modeonline = 1
		//mode onlineシェル初切り替え時
		if mode_online != 1
		{
			mode_online = 1
			--
			"\0\s[5]こちらでははじめまして。\w9\n/
			改めて、\w4よろしくね。\e"
		}
		//2回目以降
		else
		{
			"\0\s[5]お待たせ。\e"
		}
	}
	else
	{
		modeonline = 0
		"\0\s[1]変なところは無いかな?\e"
	}
}

//******************************************************************************
//インストール関連
//******************************************************************************

//------------------------------------------------------------------------------
//インストール中のメッセージ
//------------------------------------------------------------------------------
OnInstallBegin
{
	"\1\s[10]（Info:インストール中です）\e"
}

//------------------------------------------------------------------------------
//インストール完了メッセージ
//------------------------------------------------------------------------------
OnInstallComplete
{
	_ref0 = SPLIT(reference[0],' with',2)[0] //hogehoge with hemohemo
	
	"\1\s[10]"
	--
	if _ref0 == "shell" {
		"シェル"
	}
	elseif _ref0 == "ghost" {
		"ゴースト"
	}
	elseif _ref0 == "balloon" {
		"バルーン"
	}
	elseif _ref0 == "plugin" {
		"プラグイン"
	}
	--
	"（Info: %reference[1]のインストール完了しました。\n"
	--
	if basewarenameex == 'SSP' {
		_id = ''
		if _ref0 == "shell" {
			_id = 'shell'
		}
		elseif _ref0 == "ghost" {
			_id = 'ghost'
		}
		elseif _ref0 == "balloon" {
			_id = 'balloon'
		}
		
		if _id != '' {
			"切り替えますか?"
			--
			AYATEMPLATE.MenuItem("切り替える","OnAYATEMPLATE.InstallChange",_id,200)
			--
			AYATEMPLATE.MenuItem("切り替えない","Menu_CANCEL")
			--
			"）"
		}
	}
}

OnAYATEMPLATE.InstallChange
{
	"\![change,%(reference[0]),lastinstalled]"
}

//------------------------------------------------------------------------------
//インストール失敗メッセージ
//------------------------------------------------------------------------------
OnInstallFailure
{
	"\1\s[10]（Info:%reference[0]によりインストールに失敗しました。）\e"
}

//------------------------------------------------------------------------------
//インストール拒否（他のゴーストのためのアーカイブだった）
//------------------------------------------------------------------------------
OnInstallRefuse
{
	"\1\s[10]（Info:%reference[0]用ファイルです。）\e"
}


//******************************************************************************
//消滅関連
//******************************************************************************

//------------------------------------------------------------------------------
//消滅指示
//------------------------------------------------------------------------------
OnVanishSelecting
{
	"\0\s[2]え、\w4引っ越すの?\e"
}

//------------------------------------------------------------------------------
//消滅開始
//------------------------------------------------------------------------------
OnVanishSelected
{
	"\0\s[0]こうやって話せなくなるのは残念ね……。\w9\n/
	向こうに着いたら手紙ちょうだい。\w9\n/
	\s[5]私も手紙出すから。\w9\e"
}

//------------------------------------------------------------------------------
//消滅中止
//------------------------------------------------------------------------------
OnVanishCancel
{
	"\0\s[1]冗談って、\w4冗談にも種類があるでしょう?\w9\n/
	\s[6]……笑えない冗談は冗談じゃないの。\e"
}

//------------------------------------------------------------------------------
//他のゴーストが消滅して自分に切り替わった
//------------------------------------------------------------------------------
OnVanished
{
	"\0\s[0]%reference[0]さん、\w4引っ越しちゃったのね。\w9\n/
	出入りの激しさは相も変わらず、\w4か。\e"
}


//******************************************************************************
//メールチェック
//******************************************************************************

//------------------------------------------------------------------------------
//メールチェック開始
//------------------------------------------------------------------------------
OnBIFFBegin
{
	"\1\s[10]（Info:メールチェック開始）\e"
}

//------------------------------------------------------------------------------
//メールチェック成功
//------------------------------------------------------------------------------
OnBIFFComplete
{
	if reference[0] == 0
	{
		//---- メールは無かった
		"\1\s[10]（Info:メールはありませんでした）\e"
	}
	else
	{
		//---- メールが届いていた
		"\1\s[10]（Info:新着メール　%reference[0]通です）\e"
	}
}

//------------------------------------------------------------------------------
//メールチェック失敗
//------------------------------------------------------------------------------
OnBIFFFailure
{
	if reference[0] == "timeout"
	{
		//---- タイムアウト
		"\1\s[10]（Info:接続タイムアウトしました）\e"
	}
	elseif reference[0] == "kick"
	{
		//---- 蹴られた
		"\1\s[10]（Info:サーバにキックされました）\e"
	}
	elseif reference[0] == "defect"
	{
		//---- 設定誤り
		"\1\s[10]（Info:設定ミスの可能性があります。設定を確認してください。）\e"
	}
	else
	{
		//---- 原因不明
		"\1\s[10]（Info:原因不明のエラーです。）\e"
	}
}


//******************************************************************************
//ネットワーク更新
//******************************************************************************

//------------------------------------------------------------------------------
//ネットワーク更新開始
//------------------------------------------------------------------------------
OnUpdateBegin
{
	"\0\s[0]メールと拍手の確認っと。\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新準備完了
//------------------------------------------------------------------------------
OnUpdateReady
{
	"\0\s[0]%(TOINT(reference[0])+1)通もメッセージが……\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新終了
//------------------------------------------------------------------------------
OnUpdateComplete
{
	if reference[0] == "none"
	{
		//---- 更新すべきファイルが無かった
		"\0\s[0]何もなしっと。\e"
	}
	else
	{
		//---- 実際に更新が完了した
		"\0\s[0]返信は後回しでも良いかな……。\e"
	}
}

//------------------------------------------------------------------------------
//ネットワーク更新失敗
//------------------------------------------------------------------------------
OnUpdateFailure
{
	if reference[0] == "timeout"
	{
		//---- タイムアウトした
		"\0\s[0]…\w4…\w4タイムアウト?\w9"
	}
	elseif reference[0] == "md5 miss"
	{
		//---- MD5値が一致しなかった
		"\0\s[0]MD5不一致…\w4…?\w9"
	}
	else
	{
		//---- 上記以外の理由で失敗した
		"\0\s[0]%(reference[0])\w4…\w4…?\w9"
	}
	--
	"\n\nうーん……。\e"
}

//------------------------------------------------------------------------------
//ネットワーク更新 ダウンロード開始
//------------------------------------------------------------------------------
/*
OnUpdate.OnDownloadBegin
{
}
*/

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値照合開始
//------------------------------------------------------------------------------
/*
OnUpdate.OnMD5CompareBegin
{
}
*/

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値一致
//------------------------------------------------------------------------------
/*
OnUpdate.OnMD5CompareComplete
{
}
*/

//------------------------------------------------------------------------------
//ネットワーク更新 MD5値不一致
//------------------------------------------------------------------------------
/*
OnUpdate.OnMD5CompareFailure
{
}
*/

//******************************************************************************
//ヘッドラインセンス
//******************************************************************************

//------------------------------------------------------------------------------
//ヘッドラインセンス開始
//------------------------------------------------------------------------------
OnHeadlinesenseBegin
{
	"\0\s[0]%reference[0]が見たいの?\e"
}

//------------------------------------------------------------------------------
//ヘッドライン読み上げ
//------------------------------------------------------------------------------
OnHeadlinesense.OnFind
{
	//---- はじめのセリフ
	if reference[2] == "First" || reference[2] == "First and Last"
	{
		//---- 最初のページ
		"\0\b2\s[0]%reference[0]のヘッドラインね。"
	}
	elseif reference[2] == "Next"
	{
		//---- 真ん中あたりのページ
		"\0\b2\s[0]%reference[0]ヘッドラインの続き……。"
	}
	elseif reference[2] == "Last"
	{
		//---- 最後のページ
		"\0\b2\s[0]%reference[0]ヘッドラインの最後ね。"
	}
	--
	//---- ヘッドライン本体
	"\n\n%(reference[3])\n\n"
	--
	//---- 選択肢
	if reference[2] == "First" || reference[2] == "Next"
	{
		//---- 次のページがある場合
		AYATEMPLATE.MenuItem("次のページ","")
		--
		AYATEMPLATE.MenuItem("サイトへ",reference[1])
		--
		AYATEMPLATE.MenuItem("やめ","Menu_HEADLINECANCEL",150)
	}
	else
	{
		//---- 次のページがない場合
		AYATEMPLATE.MenuItem("サイトへ",reference[1])
		--
		AYATEMPLATE.MenuItem("やめ","Menu_HEADLINECANCEL",150)
	}
}

//------------------------------------------------------------------------------
//ヘッドライン更新が無かった
//------------------------------------------------------------------------------
OnHeadlinesenseComplete
{
	"\0\s[0]%reference[0]の更新はないみたい。\e"
}

//------------------------------------------------------------------------------
//ヘッドラインセンス失敗
//------------------------------------------------------------------------------
OnHeadlinesenseFailure
{
	"\0\s[0]繋がらないみたい。\n\n理由は"
	--
	if reference[0] == "can't download"
	{
		"ダウンロード失敗"
	}
	elseif reference[0] == "can't analyze"
	{
		"ヘッドライン解析失敗"
	}
	else
	{
		"謎"
	}
	--
	"ね\e"
}


//******************************************************************************
//ファイル作成関連
//******************************************************************************

//------------------------------------------------------------------------------
//updates2.dau作成開始
//------------------------------------------------------------------------------
OnUpdatedataCreating
{
	"\1\s[10]（Info:アップデートデータファイル作成中です。）\e"
}

//------------------------------------------------------------------------------
//updates2.dau作成完了
//------------------------------------------------------------------------------
OnUpdatedataCreated
{
	"\1\s[10]（Info:アップデートデータファイルの作成を開始します。）\e"
}

//------------------------------------------------------------------------------
//NAR作成開始
//------------------------------------------------------------------------------
OnNarCreating
{
	"\1\s[10]（Info:NAR作成中です。）\e"
}

//------------------------------------------------------------------------------
//NAR作成完了
//------------------------------------------------------------------------------
OnNarCreated
{
	"\1\s[10]（Info:「%reference[0]」のNARファイル「%reference[1]」作成完了しました。）\e"
}

//******************************************************************************
//時計合わせ
//みか (http://homepage2.nifty.com/ko-ki/) の辞書を参考にしました。感謝＞こーき氏
//******************************************************************************

//------------------------------------------------------------------------------
//時計合わせ開始
//------------------------------------------------------------------------------
OnSNTPBegin
{
	"\1\s[10]（Info:時計あわせ開始、%reference[0] に接続中です。）\e"
}

//------------------------------------------------------------------------------
//時刻取得成功、比較開始
//この関数で 2008/03/25 19:15:05 のように見やすい形に作り変えます。
//詳しくはSTRFORM関数の説明を見てね！
//わからなければこのままで。
//------------------------------------------------------------------------------

SNTPCompare_StrForm
{
	_txt = SPLIT(_argv[0],',')
	STRFORM("$04d/$02d/$02d $02d:$02d:$02d",TOINT(_txt[0]),TOINT(_txt[1]),TOINT(_txt[2]),TOINT(_txt[3]),TOINT(_txt[4]),TOINT(_txt[5]))
}

OnSNTPCompare
{
	"\0\s[0]\_q/
	修正前 %(SNTPCompare_StrForm(reference[2]))\n/
	修正後 %(SNTPCompare_StrForm(reference[1]))\n/
	\_q\n"
	--
	if reference[3] == 0
	{
		"（Info:誤差はありませんでした。）\e"
	}
	else
	{
		//\6は補正実行タグ。消しちゃだめ
		"\6\1\s[10]（Info:時刻をあわせました。）\6\e"
	}
}

//------------------------------------------------------------------------------
//時計合わせ失敗
//------------------------------------------------------------------------------
OnSNTPFailure
{
	"\1\s[10]（Info:時計あわせに失敗しました。）\e"
}


//******************************************************************************
//そのほか
//******************************************************************************

//------------------------------------------------------------------------------
//ディスプレイ解像度変更
//------------------------------------------------------------------------------
OnDisplayChange
{
	//---- 変数にディスプレイ解像度と色深度に関する情報を取得
	//---- 使うかどうかは分からないがとりあえず保持しておく
	displaybpp    = reference[0]
	displaywidth  = reference[1]
	displayheight = reference[2]
	SHIORI3FW.RegisterTempVar('displaybpp', 'displaywidth', 'displayheight')
}

//------------------------------------------------------------------------------
//URLドロップ
//CROW でゴーストインストーラからゴーストをインストールを始めた時にも呼ばれます
//------------------------------------------------------------------------------
OnURLDropping
{
	"\1\s[10]（Info:%reference[0]からデータを取得中です。）\e"
}

//------------------------------------------------------------------------------
//起動時に MATERIA を検出
//------------------------------------------------------------------------------
OnEmbryoExist
{
	"\1\s[10]（Info:「伺か」を検出しました。）\e"
}

//------------------------------------------------------------------------------
//起動時に猫どりふを検出
//------------------------------------------------------------------------------
OnNekodorifExist
{
	"\1\s[10]（Info:猫どりふを検出しました。）\e"
}

//------------------------------------------------------------------------------
//道頓堀
//------------------------------------------------------------------------------
OnDive
{
	"\0\s[2]あれに飛び込んだことあるの、\w4%usernameさん?\w9\e"
}

//------------------------------------------------------------------------------
//ビールかけ
//------------------------------------------------------------------------------
OnBeerShower
{
	"\0\s[2]きゃっ\w9\w9\n/
	\s[1]……片付け大変だよ、\w4もう。\e"
}

//------------------------------------------------------------------------------
//実体化
//------------------------------------------------------------------------------
OnHitThunder
{
	"\0\s[2]きゃっ（ぎゅ）\w9\w9\n/
	\s[1]ご、\w4ごめんなさい……怖くて、\w4つい。\e"
}

//------------------------------------------------------------------------------
//スクリーンセーバー実行開始
//------------------------------------------------------------------------------
/*
OnScreenSaverStart
{
}
*/

//------------------------------------------------------------------------------
//スクリーンセーバー実行終了
//------------------------------------------------------------------------------
/*
OnScreenSaverEnd
{
}
*/

//------------------------------------------------------------------------------
//起動時にシェル名取得
//------------------------------------------------------------------------------
OnNotifySelfInfo
{
	shellname = reference[3]
	--
	if shellname == "mode online" {
		modeonline = 1
	}else {
		modeonline = 0
	}
}

//------------------------------------------------------------------------------
//カーソルを飛ばす
//------------------------------------------------------------------------------
OnKickEffect
{
	FUNCTIONEX("SetCursorPos.dll",300,300)
}

//------------------------------------------------------------------------------
//季節を取得
//------------------------------------------------------------------------------
GetSeasonSlot
{
	case month {
		when 3-5 {
			"春"
		}
		when 6-8 {
			"夏"
		}
		when 9-11 {
			"秋"
		}
		when 12,1,2 {
			"冬"
		}
	}
}

//------------------------------------------------------------------------------
//ウェイトコントロール
//------------------------------------------------------------------------------
TextOnlyTranslator
{
    _string = RE_SPLIT(_argv[0],'\\(\\|q\[.*?\]\[.*?\]|[!&8cfijmpqsn]\[.*?\]|[-*+014567bcehntuvxz]|_[ablmsuvw]\[.*?\]|__(t|[qw]\[.*?\])|_[!?+nqsV]|[sipw][0-9])')
    _n = ARRAYSIZE(_string)
    _tag = RE_GETSTR()
    _tr = ''
    _qs = 0
    
    for _i = 0 ; _i < _n ; _i++ {
        _tr += EVAL("%(_argv[1])(_string[_i],_qs)")
        _tr += _tag[_i]
        if '\_q' _in_ _tag[_i] {
            _qs = ! _qs
        }
    }
    
    _tr
}

TextOnlyTranslatorFunc
{
    //_argv[0] = 置換対象テキスト
    //_argv[1] = クイックセクション内か否か
    
    _text = _argv[0]
    if ! _argv[1]
    {
	if WC == "fast"
	{
		_text = REPLACE(_text, "、", "、")
		_text = REPLACE(_text, "。", "。")
		_text = REPLACE(_text, "?", "?")
		_text = REPLACE(_text, "!", "!")
	}
	elseif WC == "normal"
	{
		_text = REPLACE(_text, "、", "、\w3")
		_text = REPLACE(_text, "。", "。\w5")
		_text = REPLACE(_text, "?", "?\w5")
		_text = REPLACE(_text, "!", "!\w5")
	}
	elseif WC == "slow"
	{
		_text = REPLACE(_text, "、", "、\w9\w9")
		_text = REPLACE(_text, "。", "。\w9\w9")
		_text = REPLACE(_text, "?", "?\w9\w9")
		_text = REPLACE(_text, "!", "!\w9\w9")
	}
    }
    _text
}